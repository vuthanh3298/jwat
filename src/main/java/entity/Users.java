package entity;
// Generated Feb 7, 2020, 11:04:24 PM by Hibernate Tools 4.3.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Users generated by hbm2java
 */
@Entity(name = "users")
@Table(name = "users", catalog = "jwat")
public class Users implements java.io.Serializable {

	private String email;
	private String username;
	private String password;
	private Date dob;
	private String university;
	private Boolean active;
	private String avatar;
	private Set<Lesson> lessons = new HashSet<Lesson>(0);
	private Set<Roles> roleses = new HashSet<Roles>(0);
	private Set<Registration> registrations = new HashSet<Registration>(0);

	public Users() {
	}

	public Users(String email) {
		this.email = email;
	}

	public Users(String email, String username, String password, Date dob, String university, Boolean active,
			String avatar, Set<Lesson> lessons, Set<Roles> roleses, Set<Registration> registrations) {
		this.email = email;
		this.username = username;
		this.password = password;
		this.dob = dob;
		this.university = university;
		this.active = active;
		this.avatar = avatar;
		this.lessons = lessons;
		this.roleses = roleses;
		this.registrations = registrations;
	}

	@Id

	@Column(name = "email", unique = true, nullable = false, length = 100)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "username", length = 100)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "password", length = 100)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dob", length = 19)
	public Date getDob() {
		return this.dob;
	}

	public void setDob(Date dob) {
		this.dob = dob;
	}

	@Column(name = "university", length = 100)
	public String getUniversity() {
		return this.university;
	}

	public void setUniversity(String university) {
		this.university = university;
	}

	@Column(name = "active")
	public Boolean getActive() {
		return this.active;
	}

	public void setActive(Boolean active) {
		this.active = active;
	}

	@Column(name = "avatar", length = 100)
	public String getAvatar() {
		return this.avatar;
	}

	public void setAvatar(String avatar) {
		this.avatar = avatar;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "attendance", catalog = "jwat", joinColumns = {
			@JoinColumn(name = "id_user", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "id_lesson", nullable = false, updatable = false) })
	public Set<Lesson> getLessons() {
		return this.lessons;
	}

	public void setLessons(Set<Lesson> lessons) {
		this.lessons = lessons;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "user_roles", catalog = "jwat", joinColumns = {
			@JoinColumn(name = "user_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "role_id", nullable = false, updatable = false) })
	public Set<Roles> getRoleses() {
		return this.roleses;
	}

	public void setRoleses(Set<Roles> roleses) {
		this.roleses = roleses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Registration> getRegistrations() {
		return this.registrations;
	}

	public void setRegistrations(Set<Registration> registrations) {
		this.registrations = registrations;
	}

}
